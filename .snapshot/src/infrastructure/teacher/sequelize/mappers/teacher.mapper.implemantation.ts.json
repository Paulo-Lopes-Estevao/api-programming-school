[{"id":"1678478228900","desc":"Enter","value":"import Teacher from '../../../../domain/teacher/entity/teacher';\nimport Address from '../../../../domain/teacher/value-object/address';\nimport TeacherModel from '../model/teacher.model';\nimport TeacherPhoneNumbersMapper from './teacher-phone-numbers.mapper';\nimport TeacherMapper from './teacher.mapper';\n\nexport default class TeacherMapperImplementation implements TeacherMapper {\n  private _phoneNumbersMapper: TeacherPhoneNumbersMapper;\n\n  constructor(phoneNumbersMapper: TeacherPhoneNumbersMapper) {\n    this._phoneNumbersMapper = phoneNumbersMapper;\n  }\n\n  public toEntity(model: TeacherModel): Teacher {\n    const teacher = new Teacher(\n      model.id,\n      model.name,\n      model.email,\n      model.password,\n      model.phone_numbers.map((item) => this._phoneNumbersMapper.toEntity(item))\n    );\n\n    const address = new Address(model.state, model.city, model.address);\n\n    teacher.changeAddress(address);\n\n    if (model.active) teacher.activate();\n\n    return teacher;\n  }\n\n  public toModel(entity: Teacher): any {\n    return {\n      id: entity.id,\n      name: entity.name,\n      email: entity.email,\n      password: entity.password,\n      state: entity.address.state,\n      city: entity.address.city,\n      address: entity.address.address,\n      active: entity.isActive(),\n      phone_numbers: entity.phone_numbers.map((numbers) => ({\n        id: numbers.id,\n        teacher_id: numbers.teacherId,\n        phone: numbers.phone,\n      })),\n    };\n  }\n}\n","position":{"line":24,"character":35}},{"id":"1678478240279","desc":"Escape","value":"import Teacher from '../../../../domain/teacher/entity/teacher';\nimport Address from '../../../../domain/teacher/value-object/address';\nimport TeacherModel from '../model/teacher.model';\nimport TeacherPhoneNumbersMapper from './teacher-phone-numbers.mapper';\nimport TeacherMapper from './teacher.mapper';\n\nexport default class TeacherMapperImplementation implements TeacherMapper {\n  private _phoneNumbersMapper: TeacherPhoneNumbersMapper;\n\n  constructor(phoneNumbersMapper: TeacherPhoneNumbersMapper) {\n    this._phoneNumbersMapper = phoneNumbersMapper;\n  }\n\n  public toEntity(model: TeacherModel): Teacher {\n    const teacher = new Teacher(\n      model.id,\n      model.name,\n      model.email,\n      model.password,\n      model.phone_numbers.map((item) => this._phoneNumbersMapper.toEntity(item))\n    );\n\n    const address = new Address(model.state, model.city, model.address);\n\n    teacher.changeAddress(address);\n\n    if (model.active) teacher.activate();\n\n    return teacher;\n  }\n\n  public toModel(entity: Teacher): any {\n    return {\n      id: entity.id,\n      name: entity.name,\n      email: entity.email,\n      password: entity.password,\n      state: entity.address.state,\n      city: entity.address.city,\n      address: entity.address.address,\n      active: entity.isActive(),\n      phone_numbers: entity.phone_numbers.map((numbers) => ({\n        id: numbers.id,\n        teacher_id: numbers.teacherId,\n        phone: numbers.phone,\n      })),\n    };\n  }\n}\n","position":{"line":24,"character":35}}]